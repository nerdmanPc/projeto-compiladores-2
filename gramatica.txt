Programa': 
    Programa $
Programa: 
    programainicio Declaracoes execucaoinicio Comando fimexecucao fimprograma
Declaracoes: 
    Declaracao Declaracoes
    €
Declaracao: 
    definainstrucao identificador como Comando
Bloco: 
    inicio Comandos fim 
Comandos: 
    Comando Comandos
    €
Comando: 
    Bloco
    Iteracao
    Laco
    Condicional
    Instrucao
Iteracao: 
    repita numero vezes Comando fimrepita
Laco: 
    enquanto Condicao faca Comando fimpara
Condicional: 
    se Condicao entao Comando fimse senao Comando fimsenao
    se Condicao entao Comando fimse
Numeros: 
    numero Numeros
    €
Instrucao: 
    mova Numeros passos
    mova Numeros
    vire para sentido
    identificador
    pare
    finalize
    apague lampada
    acenda lampada
    aguarde ate Condicao
Condicao:
    robo pronto
    robo ocupado
    robo parado
    robo movimentando
    frente robo bloqueada
    esquerda robo bloqueada
    direita robo bloqueada
    lampada acesa a frente
    lampada apagada a frente
    lampada acesa a esquerda
    lampada apagada a esquerda
    lampada acesa a direita
    lampada apagada a direita


AUTÔMATO

S1 = {
    Programa': .Programa $

    Programa: .programainicio Declaracoes execucaoinicio Comando fimexecucao fimprograma
    T(Programa, S2)
    T(programainicio, S3)
}

S2 = {
    Programa': Programa .$

    T($, SOK)
}

SOK = {
    Programa': Programa $ .
}

S3 = {
    Programa: programainicio .Declaracoes execucaoinicio Comando fimexecucao fimprograma

    Declaracoes: .Declaracao Declaracoes
    Declaracao: .definainstrucao identificador como Comando

    Declaracoes: .

    T(Declaracoes, S4)
    T(Declaracao, S5)
    T(definainstrucao, S6)
}

S4 = {
    Programa: programainicio Declaracoes .execucaoinicio Comando fimexecucao fimprograma

    T(execucaoinicio, S7)
}

S5 = {
    Declaracoes: Declaracao .Declaracoes

    Declaracoes: .Declaracao Declaracoes
    Declaracao: .definainstrucao identificador como Comando
    
    Declaracoes: .

    T(Declaracoes, S8)
    T(Declaracao, S5)
    T(definainstrucao, S6)
}

S6 = {
    Declaracao: definainstrucao .identificador como Comando

    T(identificador, S9)
}

S7 = {
    Programa: programainicio Declaracoes execucaoinicio .Comando fimexecicao fimprograma

    Comando: .Bloco
    Comando: .Iteracao
    Comando: .Laco
    Comando: .Condicional
    Comando: .Instrucao
    Bloco: .inicio Comandos fim
    Iteracao: .repita numero vezes Comando fimrepita
    Condicional: .se Condicao entao Comando fimse senao Comando fimsenao
    Condicional: .se Condicao entao Comando fimse
    Instrucao: .mova Numeros passos
    Instrucao: .mova Numeros
    Instrucao: .vire para sentido
    Instrucao: .identificador
    Instrucao: .pare
    Instrucao: .finalize
    Instrucao: .apague lampada
    Instrucao: .acenda lampada
    Instrucao: .aguarde ate Condicao

    T(Comando, S11)
    T(Bloco, S12)
    T(Iteracao, S13)
    T(Laco, S14)
    T(Condicional, S15)
    T(Instrucao, S16)
    T(inicio, S17)
    T(repita, S18)
    T(se, S19)
    T(mova, S20)
    T(vire, S21)
    T(identificador, S22)
    T(pare, S23)
    T(finalize, S24)
    T(apague, S25)
    T(acenda, S26)
    T(aguarde, S27)
}

S8 = {
    Declaracoes: Declaracao Declaracoes .
}

S9 = {
    Declaracao: definainstrucao identificador .como Comando

    T(como, S10)
}

S10 = {
    Declaracao: definainstrucao identificador como .Comando

    Comando: .Bloco
    Comando: .Iteracao
    Comando: .Laco
    Comando: .Condicional
    Comando: .Instrucao
    Bloco: .inicio Comandos fim
    Iteracao: .repita numero vezes Comando fimrepita
    Condicional: .se Condicao entao Comando fimse senao Comando fimsenao
    Condicional: .se Condicao entao Comando fimse
    Instrucao: .mova Numeros passos
    Instrucao: .mova Numeros
    Instrucao: .vire para sentido
    Instrucao: .identificador
    Instrucao: .pare
    Instrucao: .finalize
    Instrucao: .apague lampada
    Instrucao: .acenda lampada
    Instrucao: .aguarde ate Condicao

    T(Comando, S28)
    T(Bloco, S12)
    T(Iteracao, S13)
    T(Laco, S14)
    T(Condicional, S15)
    T(Instrucao, S16)
    T(inicio, S17)
    T(repita, S18)
    T(se, S19)
    T(mova, S20)
    T(vire, S21)
    T(identificador, S22)
    T(pare, S23)
    T(finalize, S24)
    T(apague, S25)
    T(acenda, S26)
    T(aguarde, S27)
}

S11 = {
    Programa: programainicio Declaracoes execucaoinicio Comando .fimexecicao fimprograma

    T(fimexecucao, S29)
}

S12 = {
    Comando: Bloco .
}

S13 = {
    Comando: Iteracao .
}

S14 = {
    Comando: Laco .
}

S15 = {
    Comando: Condicional .
}

S16 = {
    Comando: Instrucao .
}

S17 = {
    Bloco: inicio .Comandos fim

    Comandos: .Comando Comandos
    Comando: .Bloco
    Comando: .Iteracao
    Comando: .Laco
    Comando: .Condicional
    Comando: .Instrucao
    Bloco: .inicio Comandos fim
    Iteracao: .repita numero vezes Comando fimrepita
    Condicional: .se Condicao entao Comando fimse senao Comando fimsenao
    Condicional: .se Condicao entao Comando fimse
    Instrucao: .mova Numeros passos
    Instrucao: .mova Numeros
    Instrucao: .vire para sentido
    Instrucao: .identificador
    Instrucao: .pare
    Instrucao: .finalize
    Instrucao: .apague lampada
    Instrucao: .acenda lampada
    Instrucao: .aguarde ate Condicao

    Comandos: .

    T(Comando, S30)
    T(Bloco, S12)
    T(Iteracao, S13)
    T(Laco, S14)
    T(Condicional, S15)
    T(Instrucao, S16)
    T(inicio, S17)
    T(repita, S18)
    T(se, S19)
    T(mova, S20)
    T(vire, S21)
    T(identificador, S22)
    T(pare, S23)
    T(finalize, S24)
    T(apague, S25)
    T(acenda, S26)
    T(aguarde, S27)
}

S18 = {
    Iteracao: repita .numero vezes Comando fimrepita

    T(numero, S31)
}

S19 = {
    Condicional: se .Condicao entao Comando fimse senao Comando fimsenao
    Condicional: se .Condicao entao Comando fimse

    Condicao: .robo pronto
    Condicao: .robo ocupado
    Condicao: .robo parado
    Condicao: .robo movimentando
    Condicao: .frente robo bloqueada
    Condicao: .sentido robo bloqueada
    Condicao: .lampada acesa a frente
    Condicao: .lampada apagada a frente
    Condicao: .lampada acesa a sentido
    Condicao: .lampada apagada a sentido

    T(Condicao, S32)
    T(robo, S33)
    T(frente, S34)
    T(sentido, S35)
    T(lampada, S36)
}

S20 = {
    Instrucao: .mova Numeros passos
    Instrucao: .mova Numeros

    T(mova, S37)
}

S21 = {
    Instrucao: vire .para sentido

    T(para, S38)
}

S22 = {
    Instrucao: identificador .
}

S23 = {
    Instrucao: pare .
}

S24 = {
    Instrucao: finalize .
}

S25 = {
    Instrucao: apague .lampada

    T(lampada, S39)
}

S26 = {
    Instrucao: acenda .lampada

    T(lampada, S40)
}

S27 = {
    Instrucao: aguarde .ate Condicao

    T(ate, S41)
}

S28 = {
    Declaracao: definainstrucao identificador como Comando .
}

S29 = {
    Programa: programainicio Declaracoes execucaoinicio Comando fimexecicao .fimprograma
}

S30 = {
    Bloco: inicio Comandos .fim
}

S31 = {
    Iteracao: repita numero .vezes Comando fimrepita
}

S32 = {
    Condicional: se Condicao .entao Comando fimse senao Comando fimsenao
    Condicional: se Condicao .entao Comando fimse
}

S33 = {
    Condicao: robo .pronto
    Condicao: robo .ocupado
    Condicao: robo .parado
    Condicao: robo .movimentando
}

S34 = {
    Condicao: frente .robo bloqueada
}

S35 = {
    Condicao: sentido .robo bloqueada
}

S36 = {
    Condicao: lampada .acesa a frente
    Condicao: lampada .apagada a frente
    Condicao: lampada .acesa a sentido
    Condicao: lampada .apagada a sentido
}

S37 = {
    Instrucao: mova .Numeros passos
    Instrucao: mova .Numeros

    Numeros: .numero Numeros

    Numeros: .
}

S38 = {
    Instrucao: vire para .sentido
}

S39 = {
    Instrucao: apague lampada .
}

S40 = {
    Instrucao: acenda lampada .
}

S41 = {
    Instrucao: aguarde ate .Condicao

    Condicao: .robo pronto
    Condicao: .robo ocupado
    Condicao: .robo parado
    Condicao: .robo movimentando
    Condicao: .frente robo bloqueada
    Condicao: .sentido robo bloqueada
    Condicao: .lampada acesa a frente
    Condicao: .lampada apagada a frente
    Condicao: .lampada acesa a sentido
    Condicao: .lampada apagada a sentido
}

S42 = {}

S43 = {}

S44 = {}

S45 = {}

S46 = {}

S47 = {}

S48 = {}

S49 = {}

S50 = {}